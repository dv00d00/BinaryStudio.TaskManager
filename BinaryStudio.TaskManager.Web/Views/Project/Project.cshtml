@model BinaryStudio.TaskManager.Web.Models.ProjectViewModel
<style>
    .column
    {
        width: 270px;
        float: left;
        min-height: 300px;
    }
</style>

<script src="../../Scripts/MicrosoftAjax.js" type="text/javascript"></script>
<script src="../../Scripts/MicrosoftMvcAjax.js" type="text/javascript"></script>
<script src="../../Scripts/jquery.unobtrusive-ajax.js" type="text/javascript"></script>

<script type="text/javascript">
    $(document).ready(function () {
        var senderId, taskId, receiverId,projectId;
        projectId = @Model.ProjectId;
        startSignalRConnection(projectId, "@User.Identity.Name", false);
        $(".column").sortable({
            connectWith: ".column",
            cancel: ".ui-state-disabled",
            items: ".task-holder",
            start: function (event, ui) {
                senderId = $(this).closest(".column").attr("id");
            },
            receive: function (event, ui) {
                receiverId = $(this).closest(".column").attr("id");
                taskId = $(ui.item).attr("id");

                var stringArray = new Array();
                stringArray[0] = taskId;
                //check, mb sender or receiver are unassigned 
                stringArray[1] = (typeof senderId == "undefined") ? -1 : senderId;
                stringArray[2] = (typeof receiverId == "undefined") ? -1 : receiverId;
                stringArray[3] = projectId;

                $.ajax({
                    type: "POST",
                    url: "/Project/MoveTask",
                    data: { taskId: stringArray[0], senderId: stringArray[1], receiverId: stringArray[2], projectId: stringArray[3] },
                    dataType: "json",
                    traditional: true
                });

                // signalr
                //taskHub.moveTask(taskId, receiverId, $.connection.hub.id);
            },
            placeholder: "placeholderTask",
            cursor: 'move'
        });
        $(".column").disableSelection();
        
    $(document).ready(function () {
        $('.done').click(function () {
            var id = $(this).attr('id');
            var str = "#" + id + " .task";
            $(str).hide("slow");
            $.ajax({
                type: "POST",
                url: "/Project/MakeTaskClose",
                data: { taskId: id, projectId: @Model.ProjectId },
                dataType: "json",
                traditional: true
            }); 
        });
    });

    });
</script>
<!-- Caption of the table "Managers-Tasks"-->
<fieldset>
    <legend class="well-large">Users with their tasks in current project</legend>
    <table align="center" class="container-fluid" valign="top">
        @if (Model.UsersTasks.Count == 0)
        {
            <p>
                Users on this project not found!
            </p>
        }
        else
        {
            <!-- Header of the table (Managers names)-->
            <tr>
                <td align="center" width="250">
                    Actions
                </td>
                <td align="center">
                    <p>@Html.ActionLink("Create unassigned task", "CreateTask", new { userId = -1, projectId = Model.ProjectId }, new { @class = "btn" })</p>
                </td>
                @foreach (var user in Model.UsersTasks)
                {   
                    <td valign="top" align="center">
                        <p>
                            @if (@user.User.ImageData == null)
                            {
                                <img class="pull-left" src="@Url.Content("~/Content/images/photo.png")" alt="Photo" width="70" height="70"/>
                            }
                            else
                            {
                                <img class="pull-left" width="70" height="70" src="@Url.Action("GetImage", "Project", new { UserId = user.User.Id })" />
                            }
                            @Html.ActionLink(user.User.UserName, "UserDetails", new { userId = user.User.Id }, new { @class = "btn btn-info" })
                        </p>
                        <p>@Html.ActionLink("Create task", "CreateTask", new { userId = user.User.Id, projectId = Model.ProjectId }, new { @class = "btn" })</p>
                    </td> 
                }
            </tr>
            
            <tr>
                <td align="center" width="250" valign="top">
                    <div class="editor-field">
                        <p />@Html.ActionLink("Invite or delete the user", "InviteOrDeleteUser", new { projectId = Model.ProjectId }, new { @class = "btn" })
                        <br/>
                        <p />@Html.ActionLink("Show closed projects", "Project", new { projectId = Model.ProjectId, isOpenedProjects = false }, new { @class = "btn" })
                        <br/>
                        <p />@Html.ActionLink("Show opened projects", "Project", new { projectId = Model.ProjectId, isOpenedProjects = true }, new { @class = "btn" })
                        <div id="mydiv">@Html.Partial("QuickTaskCreation", Model.QuickTask)</div>
                    </div>
                </td>
                <td valign="top">
                    <div class="column" align="center" width="250" id="-1">
                        @foreach (var unAssignedTask in Model.UnAssignedTasks)
                        {
                            <div class="task-holder" data-taskid= @unAssignedTask.Id.ToString() id = @unAssignedTask.Id.ToString()>
                                @Html.Partial("ManagerTasksTablePartialView", unAssignedTask)
                            </div>
                        }
                        <div data-managerid="0" style="display: none">
                            olo</div>
                        <div class="task" style="display: none">
                            olo</div>
                    </div>
                </td>
                @foreach (var user in Model.UsersTasks)
                {   
                    <td valign="top">
                        <div class="column" id=@user.User.Id.ToString() align = "center" valign="top" width="250">
                            @foreach (var task in user.Tasks.OrderByDescending(x => x.Priority))
                            {
                                <div class="task-holder" data-taskid= @task.Id.ToString() id=@task.Id.ToString()>
                                    @Html.Partial("ManagerTasksTablePartialView", task)
                                </div>
                            }
                            <div data-managerid = @user.User.Id.ToString()>
                            </div>
                        </div>
                    </td> 
                }
            </tr>
        }
        <!-- Create a column with tasks-->
    </table>
</fieldset>
<p align="center" class="well-large">
</p>

@Ajax.ActionLink("Save", "QuickTaskCreation", "QuickTask", new AjaxOptions
    {
        InsertionMode = InsertionMode.Replace,
        UpdateTargetId = "mydiv"
    })
