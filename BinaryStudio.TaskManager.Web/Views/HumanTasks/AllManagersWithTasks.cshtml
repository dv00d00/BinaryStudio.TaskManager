@model BinaryStudio.TaskManager.Web.Models.ProjectViewModel
<script type="text/javascript">
    $(document).ready(function () {
        var senderId, taskId, receiverId;

        var taskHub = $.connection.taskHub;
        $.connection.hub.start(function () {
            taskHub.join("@User.Identity.Name.ToString()");
        });

        $(".sortableTasks").sortable({
            start: function (event, ui) {
                senderId = $(this).closest(".managerTasks").attr("id");
            },
            receive: function (event, ui) {
                receiverId = $(this).closest(".managerTasks").attr("id");
                taskId = $(ui.item).attr("id");

                var stringArray = new Array();
                stringArray[0] = taskId;
                //check, mb sender or receiver are unassigned 
                stringArray[1] = (typeof senderId == "undefined") ? -1 : senderId;
                stringArray[2] = (typeof receiverId == "undefined") ? -1 : receiverId;

                $.ajax({
                    type: "POST",
                    url: "/HumanTasks/MoveTask",
                    data: { taskId: stringArray[0], senderId: stringArray[1], receiverId: stringArray[2] },
                    dataType: "json",
                    traditional: true
                });

                // signalr
                taskHub.moveTask(taskId, receiverId);
            },
            connectWith: $(".sortableTasks"),
            placeholder: "placeholderTask",
            cursor: 'move'
        });
        $(".sortableTasks").disableSelection();
    });
</script>
<!-- Caption of the table "Managers-Tasks"-->
<fieldset>
    <legend class="well-large">Users with their tasks in current project</legend>
    <table align="center" class="container-fluid">
        @if (Model.UsersTasks.Count == 0)
        {
            <p>
                Users on this project not found!
            </p>
        }
        else
        {
            <!-- Header of the table (Managers names)-->
            <tr>
                <td align="center" width="250">
                    <div>
                        Unassigned tasks
                    </div>
                </td>
                @foreach (var task in Model.UsersTasks)
                {
                    <td align="center" width="250">
                        <div>
                            @Html.ActionLink(task.User.UserName, "UserDetails", new { userId = task.User.Id }, new { @class = "btn btn-info" })
                        </div>
                    </td>
                }
            </tr>
        }
        <!-- Create a column with tasks-->
        <td align="center" valign="top" width="250">
            <div>
                @Html.ActionLink("Create unassigned task", "Create", new { managerId = -1 }, new { @class = "btn" })
            </div>
            @foreach (var unAssignedTask in Model.UnAssignedTasks)
            {
                <div class="sortableTasks">
                    @Html.Partial("ManagerTasksTablePartialView", unAssignedTask)
                </div>
            }
            <div class="sortableTasks" style="height: 300px">
            </div>
        </td>
        @foreach (var user in Model.UsersTasks)
        {        
            <td id=@user.User.Id.ToString() align = "center" valign="top" width="250" class="managerTasks">
                <div>@Html.ActionLink("Create task", "Create", new { managerId = user.User.Id }, new { @class = "btn" })</div>
                @foreach (var task in user.Tasks.OrderByDescending(x => x.Priority))
                {
                    <div class="sortableTasks">
                        @Html.Partial("ManagerTasksTablePartialView", task)
                    </div>
                }
                <div class="sortableTasks" style="height: 300px">
                </div>
            </td>
        }
    </table>
</fieldset>
<p align="center" class="well-large">
</p>
