@model BinaryStudio.TaskManager.Logic.Domain.Reminder

@* This partial view defines form fields that will appear when creating and editing entities *@

<div class="editor-label">
    Дата напоминания:
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.ReminderDate)
    @Html.ValidationMessageFor(model => model.ReminderDate)
</div>

<div class="editor-label">
    Содержание:
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.Content)
    @Html.ValidationMessageFor(model => model.Content)
</div>

<div class="editor-label">
    Сотрудник
</div>
<div class="editor-field">
    @try
    {
        @Html.DropDownListFor(model => model.EmployeeID, ((IEnumerable<BinaryStudio.TaskManager.Logic
        .Domain.Employee>)ViewBag.PossibleEmployees).Select(option => new SelectListItem
        {
            Text = (option == null ? "None" : option.Name), 
            Value = option.Id.ToString(),
            Selected = (Model != null) && (option.Id == Model.EmployeeID)
        }), "Выберите...")
    }
    catch (System.ArgumentNullException)
    {
       <input value="Empty Employee List" type="text" disabled="true"/>   
    }
    @Html.ValidationMessageFor(model => model.EmployeeID)
</div>
<div class="editor-label">
    Задание:
</div>
<div class="editor-field">
    @try
    {
        @Html.DropDownListFor(model => model.TaskId, ((IEnumerable<BinaryStudio.TaskManager.Logic.
        Domain.HumanTask>)ViewBag.PossibleTasks).Select(option => new SelectListItem
        {
            Text = (option == null ? "None" : option.Name),
            Value = option.Id.ToString(),
            Selected = (Model != null) && (option.Id == Model.TaskId)
        }), "Выберите...")
    }
    
    catch (System.ArgumentNullException)
    {
       <input value="Empty Task List" type="text" disabled="true"/>
        //throw;
    }
    @Html.ValidationMessageFor(model => model.TaskId)
</div>
